version: "2"

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: bitnami/zookeeper:latest
    networks:
      - kafka-net
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-server:
    image: bitnami/kafka:latest
    networks:
      - kafka-net
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092, PLAINTEXT_HOST://kafka-server:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092, PLAINTEXT_HOST://kafka-server:29092
    depends_on:
      - zookeeper-server

  postgress:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./Database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./Database/accounts.sql:/docker-entrypoint-initdb.d/2-accounts.sql
      - ./Database/custom.sql:/docker-entrypoint-initdb.d/3-custom.sql
    networks:
      - kafka-net
    environment:
      POSTGRES_USER: tech
      POSTGRES_PASSWORD: test
      POSTGRES_DB: payments

  api-producer:
    build: ./ApiAndProducer
    ports:
      - 9000:8080
    networks:
      - kafka-net
    volumes:
      - ./ApiAndProducer/bin:/app/
    command:
      [
        "./wait-for-it.sh",
        "postgress:5432",
        "kafka-server:9092",
        "-t",
        "100",
        "--",
        "java",
        "-jar",
        "app.jar",
      ]
    depends_on:
      - postgress
      - kafka-server

  payment:
    image: payment
    build: ./payment
    ports:
        - "8081:8081"
    environment:
      - KAFKA_HOST=kafka-server:29092
      - CONSUMER_GROUP=payment-consumer
      - OFFLINE_TOPIC=offline
      - ONLINE_TOPIC=online
      - POSTGRES_URL=jdbc:postgresql://postgress:5432/payments
      - PAYMENT_VALIDATION_ENDPOINT=http://api-producer:8080/payment
      - PAYMENT_ERROR_LOG_ENDPOINT=http://api-producer:8080/log
    networks:
      - kafka-net
    volumes:
        - ./payment:/app
    depends_on:
      - postgress
      - kafka-server
      - api-producer
